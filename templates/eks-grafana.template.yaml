AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploys the grafana helm chart into an existing kubernetes cluster (qs-1qde65hno)"
Metadata:
  LintSpellExclude:
    - Kubernetes
    - namespace
    - Namespace
    - grafana
  QuickStartDocumentation:
    EntrypointName: "Launch into an existing EKS cluster"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Prometheus for EKS configuration
        Parameters:
          - KubeClusterName
          - Namespace
          - PrometheusURL
          - OverrideValues
    ParameterLabels:
      KubeClusterName:
        default: EKS cluster name
      OverrideValues:
        default: Override values
      Namespace:
        default: Namespace
      PrometheusURL:
        default: Prometheus URL
Parameters:
  KubeClusterName:
    Type: String
    Description: 'Name of the EKS cluster to deploy grafana into.'
  OverrideValues:
    Type: String
    Description: (Optional) URI to a file containing values to pass to the helm install. Can be http(s):// or s3://.
    Default: ''
  Namespace:
    Type: String
    Default: grafana
    Description: '[Optional] Kubernetes namespace to deploy grafana into.'
  PrometheusURL:
    Type: String
    Default: http://prometheus-server.prometheus.svc.cluster.local
    Description: '[Optional] URL for prometheus, defaults to in-cluster prometheus deployed into the prometheus namespace.'
Conditions:
  SupplyOverrides: !Not [!Equals [!Ref OverrideValues, '']]
Resources:
  GrafanaNamespace:
    Type: "AWSQS::Kubernetes::Resource"
    Properties:
      ClusterName: !Ref KubeClusterName
      Namespace: 'kube-system'
      Manifest: !Sub |
        kind: Namespace
        apiVersion: v1
        metadata:
          name: ${Namespace}
  GrafanaHelmChart:
    Type: "AWSQS::Kubernetes::Helm"
    DependsOn: GrafanaNamespace
    Metadata: { cfn-lint: { config: { ignore_checks: [ E3012 ] } } }
    Properties:
      ClusterID: !Ref KubeClusterName
      Namespace: !Ref Namespace
      Chart: stable/grafana
      Name: grafana
      ValueOverrideURL: !If [SupplyOverrides, !Ref OverrideValues, !Ref 'AWS::NoValue']
      ValueYaml: !Sub |
        persistence:
          type: pvc
          enabled: true
          storageClassName: gp2
        service:
          type: LoadBalancer
        datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
            - name: Prometheus
              type: prometheus
              url: ${PrometheusURL}
              access: proxy
              isDefault: true
        dashboardProviders:
          dashboardproviders.yaml:
            apiVersion: 1
            providers:
            - name: 'default'
              orgId: 1
              folder: ''
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/default
        dashboards:
          default:
            node-exporter:
              gnetId: 1860
              revision: 21
              datasource: Prometheus
            cluster:
              gnetId: 8685
              revision: 1
              datasource: Prometheus
Outputs:
  GrafanaReleaseName:
    Value: !GetAtt GrafanaHelmChart.Name
